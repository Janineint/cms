@using InventoryManagement.ViewModels
@model OrderCreateViewModel
@{
    var products = (IEnumerable<dynamic>)ViewData["Products"];
    ViewData["Title"] = "Edit Order";
    var orderId = ViewData["OrderId"];
}

<div class="container my-5" style="max-width: 600px;">
    <h2 class="text-center fw-bold mb-4">@ViewData["Title"]</h2>

    <form asp-action="Edit" method="post">
        <input type="hidden" name="id" value="@orderId" />

        <div class="mb-3">
            <label class="form-label">Store</label>
            <select asp-for="StoreID" asp-items="@(new SelectList(ViewBag.StoreID, "Value", "Text"))" class="form-select">
                <option value="">-- Select Store --</option>
            </select>
        </div>

        <div class="mb-3">
            <label asp-for="OrderDate" class="form-label">Order Date</label>
            <input asp-for="OrderDate" class="form-control" type="date" />
        </div>

        <h5 class="fw-bold mt-4">Order Items</h5>
        <div id="itemsContainer">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <div class="border p-3 rounded mb-3">
                    <div class="mb-2">
                        <label>Menu Item</label>
                        <select name="Items[@i].ProductId" class="form-select">
                            <option value="">-- Select Menu Item --</option>
                            @foreach (var product in products)
                            {
                                <option value="@product.ProductId" selected="@(product.ProductId == Model.Items[i].ProductId)">@product.Display</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label>Quantity</label>
                        <input name="Items[@i].Quantity" class="form-control" type="number" value="@Model.Items[i].Quantity" />
                    </div>
                </div>
            }
        </div>

        <button type="button" class="btn btn-outline-dark mb-3" onclick="addItem()">+ Add Another Item</button>

        <div class="text-end">
            <a asp-action="Index" class="btn btn-secondary me-2">Cancel</a>
            <button type="submit" class="btn btn-success">Update Order</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let itemIndex = @Model.Items.Count;
        const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(products));
        function addItem() {
            const container = document.getElementById("itemsContainer");
            const div = document.createElement("div");
            div.classList.add("border", "p-3", "rounded", "mb-3");

            let options = '<option value="">-- Select Menu Item --</option>';
            for (const p of products) {
                options += `<option value="${p.ProductId}">${p.Display}</option>`;
            }

            div.innerHTML = `
                <div class="mb-2">
                    <label>Menu Item</label>
                    <select name="Items[${itemIndex}].ProductId" class="form-select">
                        ${options}
                    </select>
                </div>
                <div>
                    <label>Quantity</label>
                    <input name="Items[${itemIndex}].Quantity" class="form-control" type="number" />
                </div>`;

            container.appendChild(div);
            itemIndex++;
        }
    </script>
}